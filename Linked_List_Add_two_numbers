/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* newnode(int);
struct ListNode* addTwoNumbers(struct ListNode*,struct ListNode*);
void printlist(struct ListNode* node)
{
    while(node!=NULL)
    {
        printf("%d ",node->val);
        node=node->next;
    }
}

void push(struct ListNode** head_ref,int data)
{
    struct ListNode* new_node = (struct ListNode*)malloc(sizeof(struct ListNode));
    new_node->val = data;
    new_node->next = *head_ref;
    *head_ref = new_node;

}


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    
    struct ListNode* temp,*res=NULL,*prev=NULL;
    int sum,carry=0;
    
    while(l1 != NULL || l2 != NULL)
    {
        sum = carry + (l1 ? l1->val : 0)+(l2 ? l2->val : 0);
        
        carry = sum/10;
        
        sum = sum%10;
        
        temp = newnode(sum);
        
        if(res==NULL)
            res = temp;
        else 
            prev->next  = temp;
        prev = temp;
        
        if(l1!=NULL)
            l1 = l1->next;
        if(l2!=NULL)
            l2 = l2->next;
        
    }
    if(carry>0)
    {
        temp->next = newnode(carry);
    }
    
    return res;

}

struct ListNode* newnode(int data)
{
    struct ListNode* new_node = (struct ListNode*)malloc(sizeof(struct ListNode));
    new_node->val = data;
    new_node->next = NULL;
    return new_node;
}
